{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\source\\\\repos\\\\VS Code\\\\react-project\\\\frontend\\\\src\\\\components\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    title,\n    location,\n    price,\n    image\n  } = state || {}; // Destructure with fallback\n\n  if (!state) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Handle the case where state is undefined\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title || 'Tour'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n  return [useLocation];\n});\n_c = BookingPage;\nexport default BookingPage;\n\n// import React, { useState } from 'react';\n// import './BookingPage.css';\n// import { useNavigate, useLocation } from 'react-router-dom';\n\n// const BookingPage = () => {\n//   const [numTickets, setNumTickets] = useState(1);\n//   const [departureCity, setDepartureCity] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n//   const { state } = useLocation();\n\n//   if (!state) {\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\n//   }\n\n//   // Destructuring the details from the state\n//   const { trekDetails, tourDetails, type } = state;\n\n//   const handleBookingSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Setting booking details based on whether it's a trek or tour\n//     const bookingDetails = {\n//       type, // Type is either 'trek' or 'tour'\n//       departureCity,\n//       numTickets,\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n//     };\n\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n//     // Navigate to the payment page with appropriate details\n//     navigate('/payment', {\n//       state: {\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       },\n//     });\n//   };\n\n//   // Choosing the correct details based on the type (trek or tour)\n//   const details = type === 'trek' ? trekDetails : tourDetails;\n\n//   return (\n//     <div className=\"booking-container\">\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n//       <div className=\"booking-card\">\n//         {details.image && (\n//           <img\n//             src={details.image}\n//             alt={details.title}\n//             className=\"booking-image\"\n//           />\n//         )}\n//         <h2>{details.title}</h2>\n//         <p>{`Location: ${details.location || details.duration}`}</p>\n//         <p>{`Price: $${details.price} per person`}</p>\n\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n//           <label>\n//             Number of Tickets:\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               value={numTickets}\n//               onChange={(e) => setNumTickets(e.target.value)}\n//               required\n//             />\n//           </label>\n//           <label>\n//             Departure City:\n//             <input\n//               type=\"text\"\n//               value={departureCity}\n//               onChange={(e) => setDepartureCity(e.target.value)}\n//               placeholder=\"Enter departure city\"\n//               required\n//             />\n//           </label>\n//           {error && <p className=\"error-message\">{error}</p>}\n//           <button type=\"submit\" className=\"book-btn\">\n//             Confirm Booking\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingPage;\n\n// // import React, { useState } from 'react';\n// // import './BookingPage.css';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const BookingPage = () => {\n// //   const [numTickets, setNumTickets] = useState(1);\n// //   const [departureCity, setDepartureCity] = useState('');\n// //   const [error, setError] = useState('');\n// //   const navigate = useNavigate();\n// //   const { state: tourDetails } = useLocation();\n\n// //   if (!tourDetails) {\n// //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\n// //   }\n\n// //   const handleBookingSubmit = (e) => {\n// //     e.preventDefault();\n// //     const bookingDetails = {\n// //       tourId: tourDetails.TourId || null,\n// //       departureCity,\n// //       numTickets,\n// //     };\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n// //     // Pass the required tour details in the state\n// //     navigate('/payment', {\n// //       state: {\n// //         title: tourDetails.title,\n// //         price: tourDetails.price,\n// //       },\n// //     });\n// //   };\n\n// //   return (\n// //     <div className=\"booking-container\">\n// //       <h1 className=\"booking-title\">Book Your Tour</h1>\n// //       <div className=\"booking-card\">\n// //         {tourDetails.image && (\n// //           <img\n// //             src={tourDetails.image}\n// //             alt={tourDetails.title}\n// //             className=\"booking-image\"\n// //           />\n// //         )}\n// //         <h2>{tourDetails.title}</h2>\n// //         <p>{`Location: ${tourDetails.location}`}</p>\n// //         <p>{`Price: $${tourDetails.price} per person`}</p>\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// //           <label>\n// //             Number of Tickets:\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               value={numTickets}\n// //               onChange={(e) => setNumTickets(e.target.value)}\n// //               required\n// //             />\n// //           </label>\n// //           <label>\n// //             Departure City:\n// //             <input\n// //               type=\"text\"\n// //               value={departureCity}\n// //               onChange={(e) => setDepartureCity(e.target.value)}\n// //               placeholder=\"Enter departure city\"\n// //               required\n// //             />\n// //           </label>\n// //           {error && <p className=\"error-message\">{error}</p>}\n// //           <button type=\"submit\" className=\"book-btn\">\n// //             Confirm Booking\n// //           </button>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default BookingPage;\n\n// // // import React, { useState } from 'react';\n// // // import { useNavigate, useLocation } from 'react-router-dom';\n// // // import './BookingPage.css';\n\n// // // const BookingPage = () => {\n// // //   const { state } = useLocation();\n// // //   const [numTickets, setNumTickets] = useState(1);\n// // //   const [departureCity, setDepartureCity] = useState('');\n// // //   const navigate = useNavigate();\n\n// // //   if (!state) {\n// // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\n// // //   }\n\n// // //   const { trekDetails, tourDetails, type } = state;\n\n// // //   const handleBookingSubmit = (e) => {\n// // //     e.preventDefault();\n// // //     const bookingDetails = {\n// // //       type, // Include type (trek or tour)\n// // //       departureCity,\n// // //       numTickets,\n// // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n// // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n// // //     };\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n// // //     navigate('/payment');\n// // //   };\n\n// // //   const details = type === 'trek' ? trekDetails : tourDetails;\n\n// // //   return (\n// // //     <div className=\"booking-container\">\n// // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n// // //       <div className=\"booking-card\">\n// // //         <h2>{details.title}</h2>\n// // //         <p>{`Duration: ${details.duration}`}</p>\n// // //         <p>{`Price: PKR ${details.price} per person`}</p>\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// // //           <label>\n// // //             Number of Tickets:\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               value={numTickets}\n// // //               onChange={(e) => setNumTickets(e.target.value)}\n// // //               required\n// // //             />\n// // //           </label>\n// // //           <label>\n// // //             Departure City:\n// // //             <input\n// // //               type=\"text\"\n// // //               value={departureCity}\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\n// // //               placeholder=\"Enter departure city\"\n// // //               required\n// // //             />\n// // //           </label>\n// // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","BookingPage","_s","state","title","location","price","image","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Hp/source/repos/VS Code/react-project/frontend/src/components/BookingPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst BookingPage = () => {\r\n  const { state } = useLocation();\r\n  const { title, location, price, image } = state || {};  // Destructure with fallback\r\n\r\n  if (!state) {\r\n    return <div>Loading...</div>; // Handle the case where state is undefined\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <img src={image} alt={title || 'Tour'} />\r\n      <p>{location}</p>\r\n      <p>{price}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './BookingPage.css';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// const BookingPage = () => {\r\n//   const [numTickets, setNumTickets] = useState(1);\r\n//   const [departureCity, setDepartureCity] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n//   const { state } = useLocation();\r\n\r\n//   if (!state) {\r\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\r\n//   }\r\n\r\n//   // Destructuring the details from the state\r\n//   const { trekDetails, tourDetails, type } = state;\r\n\r\n//   const handleBookingSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Setting booking details based on whether it's a trek or tour\r\n//     const bookingDetails = {\r\n//       type, // Type is either 'trek' or 'tour'\r\n//       departureCity,\r\n//       numTickets,\r\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n//     };\r\n\r\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n\r\n//     // Navigate to the payment page with appropriate details\r\n//     navigate('/payment', {\r\n//       state: {\r\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\r\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   // Choosing the correct details based on the type (trek or tour)\r\n//   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n//   return (\r\n//     <div className=\"booking-container\">\r\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n//       <div className=\"booking-card\">\r\n//         {details.image && (\r\n//           <img\r\n//             src={details.image}\r\n//             alt={details.title}\r\n//             className=\"booking-image\"\r\n//           />\r\n//         )}\r\n//         <h2>{details.title}</h2>\r\n//         <p>{`Location: ${details.location || details.duration}`}</p>\r\n//         <p>{`Price: $${details.price} per person`}</p>\r\n\r\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n//           <label>\r\n//             Number of Tickets:\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"1\"\r\n//               value={numTickets}\r\n//               onChange={(e) => setNumTickets(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <label>\r\n//             Departure City:\r\n//             <input\r\n//               type=\"text\"\r\n//               value={departureCity}\r\n//               onChange={(e) => setDepartureCity(e.target.value)}\r\n//               placeholder=\"Enter departure city\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//           <button type=\"submit\" className=\"book-btn\">\r\n//             Confirm Booking\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingPage;\r\n\r\n// // import React, { useState } from 'react';\r\n// // import './BookingPage.css';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const BookingPage = () => {\r\n// //   const [numTickets, setNumTickets] = useState(1);\r\n// //   const [departureCity, setDepartureCity] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const navigate = useNavigate();\r\n// //   const { state: tourDetails } = useLocation();\r\n\r\n// //   if (!tourDetails) {\r\n// //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\r\n// //   }\r\n\r\n// //   const handleBookingSubmit = (e) => {\r\n// //     e.preventDefault();\r\n// //     const bookingDetails = {\r\n// //       tourId: tourDetails.TourId || null,\r\n// //       departureCity,\r\n// //       numTickets,\r\n// //     };\r\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n  \r\n// //     // Pass the required tour details in the state\r\n// //     navigate('/payment', {\r\n// //       state: {\r\n// //         title: tourDetails.title,\r\n// //         price: tourDetails.price,\r\n// //       },\r\n// //     });\r\n// //   };\r\n  \r\n\r\n// //   return (\r\n// //     <div className=\"booking-container\">\r\n// //       <h1 className=\"booking-title\">Book Your Tour</h1>\r\n// //       <div className=\"booking-card\">\r\n// //         {tourDetails.image && (\r\n// //           <img\r\n// //             src={tourDetails.image}\r\n// //             alt={tourDetails.title}\r\n// //             className=\"booking-image\"\r\n// //           />\r\n// //         )}\r\n// //         <h2>{tourDetails.title}</h2>\r\n// //         <p>{`Location: ${tourDetails.location}`}</p>\r\n// //         <p>{`Price: $${tourDetails.price} per person`}</p>\r\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// //           <label>\r\n// //             Number of Tickets:\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               min=\"1\"\r\n// //               value={numTickets}\r\n// //               onChange={(e) => setNumTickets(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           <label>\r\n// //             Departure City:\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={departureCity}\r\n// //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// //               placeholder=\"Enter departure city\"\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           {error && <p className=\"error-message\">{error}</p>}\r\n// //           <button type=\"submit\" className=\"book-btn\">\r\n// //             Confirm Booking\r\n// //           </button>\r\n// //         </form>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BookingPage;\r\n\r\n\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { useNavigate, useLocation } from 'react-router-dom';\r\n// // // import './BookingPage.css';\r\n\r\n// // // const BookingPage = () => {\r\n// // //   const { state } = useLocation();\r\n// // //   const [numTickets, setNumTickets] = useState(1);\r\n// // //   const [departureCity, setDepartureCity] = useState('');\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   if (!state) {\r\n// // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\r\n// // //   }\r\n\r\n// // //   const { trekDetails, tourDetails, type } = state;\r\n\r\n// // //   const handleBookingSubmit = (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const bookingDetails = {\r\n// // //       type, // Include type (trek or tour)\r\n// // //       departureCity,\r\n// // //       numTickets,\r\n// // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n// // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n// // //     };\r\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n// // //     navigate('/payment');\r\n// // //   };\r\n\r\n// // //   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n// // //   return (\r\n// // //     <div className=\"booking-container\">\r\n// // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n// // //       <div className=\"booking-card\">\r\n// // //         <h2>{details.title}</h2>\r\n// // //         <p>{`Duration: ${details.duration}`}</p>\r\n// // //         <p>{`Price: PKR ${details.price} per person`}</p>\r\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// // //           <label>\r\n// // //             Number of Tickets:\r\n// // //             <input\r\n// // //               type=\"number\"\r\n// // //               min=\"1\"\r\n// // //               value={numTickets}\r\n// // //               onChange={(e) => setNumTickets(e.target.value)}\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           <label>\r\n// // //             Departure City:\r\n// // //             <input\r\n// // //               type=\"text\"\r\n// // //               value={departureCity}\r\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// // //               placeholder=\"Enter departure city\"\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\r\n// // //         </form>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default BookingPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGL,WAAW,CAAC,CAAC;EAC/B,MAAM;IAAEM,KAAK;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGJ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAE;;EAExD,IAAI,CAACA,KAAK,EAAE;IACV,oBAAOH,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACEZ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAKJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBZ,OAAA;MAAKa,GAAG,EAAEN,KAAM;MAACO,GAAG,EAAEV,KAAK,IAAI;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCZ,OAAA;MAAAQ,QAAA,EAAIH;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBZ,OAAA;MAAAQ,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACV,EAAA,CAhBID,WAAW;EAAA,QACGH,WAAW;AAAA;AAAAiB,EAAA,GADzBd,WAAW;AAkBjB,eAAeA,WAAW;;AAG1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}