{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\source\\\\repos\\\\VS Code\\\\react-project\\\\frontend\\\\src\\\\components\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    state\n  } = useLocation(); // Retrieve state passed from TourCard component\n  const {\n    title,\n    location,\n    price,\n    image\n  } = state || {}; // Destructuring the state\n\n  const navigate = useNavigate();\n\n  // Form state to manage user input for booking\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    numberOfPeople: 1,\n    specialRequests: ''\n  });\n\n  // If no state is passed or missing details, show an error message\n  if (!title || !location || !price || !image) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No details available for the selected tour. Please go back and select again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission (Booking)\n  const handleBooking = e => {\n    e.preventDefault();\n    alert('Your booking has been confirmed!');\n    // Handle further actions like saving the booking details or sending an email confirmation.\n    // Redirect the user to another page (optional)\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Booking Details for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tour-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", price, \" / day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleBooking,\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numberOfPeople\",\n          children: \"Number of People:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numberOfPeople\",\n          name: \"numberOfPeople\",\n          value: formData.numberOfPeople,\n          onChange: handleInputChange,\n          min: \"1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"specialRequests\",\n          children: \"Special Requests:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"specialRequests\",\n          name: \"specialRequests\",\n          value: formData.specialRequests,\n          onChange: handleInputChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"kCO68uyHNuFT776qw9zIAnf+tzY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BookingPage;\nexport default BookingPage;\n\n// import React, { useState } from 'react';\n// import './BookingPage.css';\n// import { useNavigate, useLocation } from 'react-router-dom';\n\n// const BookingPage = () => {\n//   const [numTickets, setNumTickets] = useState(1);\n//   const [departureCity, setDepartureCity] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n//   const { state } = useLocation();\n\n//   if (!state) {\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\n//   }\n\n//   // Destructuring the details from the state\n//   const { trekDetails, tourDetails, type } = state;\n\n//   const handleBookingSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Validate the form inputs\n//     if (!departureCity.trim()) {\n//       setError('Departure city is required');\n//       return;\n//     }\n//     if (numTickets <= 0) {\n//       setError('Number of tickets must be greater than 0');\n//       return;\n//     }\n\n//     // Clear error if everything is valid\n//     setError('');\n\n//     // Setting booking details based on whether it's a trek or tour\n//     const bookingDetails = {\n//       type, // Type is either 'trek' or 'tour'\n//       departureCity,\n//       numTickets,\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n//     };\n\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n//     // Navigate to the payment page with appropriate details\n//     navigate('/payment', {\n//       state: {\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       },\n//     });\n//   };\n\n//   // Choosing the correct details based on the type (trek or tour)\n//   const details = type === 'trek' ? trekDetails : tourDetails;\n\n//   return (\n//     <div className=\"booking-container\">\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n//       <div className=\"booking-card\">\n//         {/* Check if the image exists and render it */}\n//         {details.image && (\n//           <img\n//             src={details.image}\n//             alt={details.title}\n//             className=\"booking-image\"\n//           />\n//         )}\n//         <h2>{details.title}</h2>\n//         <p>{`Location: ${details.location || details.duration}`}</p>\n//         <p>{`Price: $${details.price} per person`}</p>\n\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n//           <label>\n//             Number of Tickets:\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               value={numTickets}\n//               onChange={(e) => setNumTickets(Number(e.target.value))}\n//               required\n//             />\n//           </label>\n//           <label>\n//             Departure City:\n//             <input\n//               type=\"text\"\n//               value={departureCity}\n//               onChange={(e) => setDepartureCity(e.target.value)}\n//               placeholder=\"Enter departure city\"\n//               required\n//             />\n//           </label>\n//           {/* Show error if there's any */}\n//           {error && <p className=\"error-message\">{error}</p>}\n//           <button type=\"submit\" className=\"book-btn\">\n//             Confirm Booking\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingPage;\n\n// // import React, { useState } from 'react';\n// // import './BookingPage.css';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const BookingPage = () => {\n// //   const [numTickets, setNumTickets] = useState(1);\n// //   const [departureCity, setDepartureCity] = useState('');\n// //   const [error, setError] = useState('');\n// //   const navigate = useNavigate();\n// //   const { state } = useLocation();\n\n// //   if (!state) {\n// //     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\n// //   }\n\n// //   // Destructuring the details from the state\n// //   const { trekDetails, tourDetails, type } = state;\n\n// //   const handleBookingSubmit = (e) => {\n// //     e.preventDefault();\n\n// //     // Setting booking details based on whether it's a trek or tour\n// //     const bookingDetails = {\n// //       type, // Type is either 'trek' or 'tour'\n// //       departureCity,\n// //       numTickets,\n// //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n// //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n// //     };\n\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n// //     // Navigate to the payment page with appropriate details\n// //     navigate('/payment', {\n// //       state: {\n// //         title: type === 'trek' ? trekDetails.title : tourDetails.title,\n// //         price: type === 'trek' ? trekDetails.price : tourDetails.price,\n// //       },\n// //     });\n// //   };\n\n// //   // Choosing the correct details based on the type (trek or tour)\n// //   const details = type === 'trek' ? trekDetails : tourDetails;\n\n// //   return (\n// //     <div className=\"booking-container\">\n// //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n// //       <div className=\"booking-card\">\n// //         {details.image && (\n// //           <img\n// //             src={details.image}\n// //             alt={details.title}\n// //             className=\"booking-image\"\n// //           />\n// //         )}\n// //         <h2>{details.title}</h2>\n// //         <p>{`Location: ${details.location || details.duration}`}</p>\n// //         <p>{`Price: $${details.price} per person`}</p>\n\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// //           <label>\n// //             Number of Tickets:\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               value={numTickets}\n// //               onChange={(e) => setNumTickets(e.target.value)}\n// //               required\n// //             />\n// //           </label>\n// //           <label>\n// //             Departure City:\n// //             <input\n// //               type=\"text\"\n// //               value={departureCity}\n// //               onChange={(e) => setDepartureCity(e.target.value)}\n// //               placeholder=\"Enter departure city\"\n// //               required\n// //             />\n// //           </label>\n// //           {error && <p className=\"error-message\">{error}</p>}\n// //           <button type=\"submit\" className=\"book-btn\">\n// //             Confirm Booking\n// //           </button>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default BookingPage;\n\n// // // import React, { useState } from 'react';\n// // // import './BookingPage.css';\n// // // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // // const BookingPage = () => {\n// // //   const [numTickets, setNumTickets] = useState(1);\n// // //   const [departureCity, setDepartureCity] = useState('');\n// // //   const [error, setError] = useState('');\n// // //   const navigate = useNavigate();\n// // //   const { state: tourDetails } = useLocation();\n\n// // //   if (!tourDetails) {\n// // //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\n// // //   }\n\n// // //   const handleBookingSubmit = (e) => {\n// // //     e.preventDefault();\n// // //     const bookingDetails = {\n// // //       tourId: tourDetails.TourId || null,\n// // //       departureCity,\n// // //       numTickets,\n// // //     };\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n// // //     // Pass the required tour details in the state\n// // //     navigate('/payment', {\n// // //       state: {\n// // //         title: tourDetails.title,\n// // //         price: tourDetails.price,\n// // //       },\n// // //     });\n// // //   };\n\n// // //   return (\n// // //     <div className=\"booking-container\">\n// // //       <h1 className=\"booking-title\">Book Your Tour</h1>\n// // //       <div className=\"booking-card\">\n// // //         {tourDetails.image && (\n// // //           <img\n// // //             src={tourDetails.image}\n// // //             alt={tourDetails.title}\n// // //             className=\"booking-image\"\n// // //           />\n// // //         )}\n// // //         <h2>{tourDetails.title}</h2>\n// // //         <p>{`Location: ${tourDetails.location}`}</p>\n// // //         <p>{`Price: $${tourDetails.price} per person`}</p>\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// // //           <label>\n// // //             Number of Tickets:\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               value={numTickets}\n// // //               onChange={(e) => setNumTickets(e.target.value)}\n// // //               required\n// // //             />\n// // //           </label>\n// // //           <label>\n// // //             Departure City:\n// // //             <input\n// // //               type=\"text\"\n// // //               value={departureCity}\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\n// // //               placeholder=\"Enter departure city\"\n// // //               required\n// // //             />\n// // //           </label>\n// // //           {error && <p className=\"error-message\">{error}</p>}\n// // //           <button type=\"submit\" className=\"book-btn\">\n// // //             Confirm Booking\n// // //           </button>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default BookingPage;\n\n// // // // import React, { useState } from 'react';\n// // // // import { useNavigate, useLocation } from 'react-router-dom';\n// // // // import './BookingPage.css';\n\n// // // // const BookingPage = () => {\n// // // //   const { state } = useLocation();\n// // // //   const [numTickets, setNumTickets] = useState(1);\n// // // //   const [departureCity, setDepartureCity] = useState('');\n// // // //   const navigate = useNavigate();\n\n// // // //   if (!state) {\n// // // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\n// // // //   }\n\n// // // //   const { trekDetails, tourDetails, type } = state;\n\n// // // //   const handleBookingSubmit = (e) => {\n// // // //     e.preventDefault();\n// // // //     const bookingDetails = {\n// // // //       type, // Include type (trek or tour)\n// // // //       departureCity,\n// // // //       numTickets,\n// // // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n// // // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n// // // //     };\n// // // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n// // // //     navigate('/payment');\n// // // //   };\n\n// // // //   const details = type === 'trek' ? trekDetails : tourDetails;\n\n// // // //   return (\n// // // //     <div className=\"booking-container\">\n// // // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n// // // //       <div className=\"booking-card\">\n// // // //         <h2>{details.title}</h2>\n// // // //         <p>{`Duration: ${details.duration}`}</p>\n// // // //         <p>{`Price: PKR ${details.price} per person`}</p>\n// // // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// // // //           <label>\n// // // //             Number of Tickets:\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               value={numTickets}\n// // // //               onChange={(e) => setNumTickets(e.target.value)}\n// // // //               required\n// // // //             />\n// // // //           </label>\n// // // //           <label>\n// // // //             Departure City:\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={departureCity}\n// // // //               onChange={(e) => setDepartureCity(e.target.value)}\n// // // //               placeholder=\"Enter departure city\"\n// // // //               required\n// // // //             />\n// // // //           </label>\n// // // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","BookingPage","_s","state","title","location","price","image","navigate","formData","setFormData","name","email","numberOfPeople","specialRequests","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","e","value","target","prevData","handleBooking","preventDefault","alert","className","src","alt","onSubmit","htmlFor","type","id","onChange","required","min","rows","_c","$RefreshReg$"],"sources":["C:/Users/Hp/source/repos/VS Code/react-project/frontend/src/components/BookingPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst BookingPage = () => {\r\n  const { state } = useLocation(); // Retrieve state passed from TourCard component\r\n  const { title, location, price, image } = state || {}; // Destructuring the state\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Form state to manage user input for booking\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    numberOfPeople: 1,\r\n    specialRequests: ''\r\n  });\r\n\r\n  // If no state is passed or missing details, show an error message\r\n  if (!title || !location || !price || !image) {\r\n    return <h2>No details available for the selected tour. Please go back and select again.</h2>;\r\n  }\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle form submission (Booking)\r\n  const handleBooking = (e) => {\r\n    e.preventDefault();\r\n    alert('Your booking has been confirmed!');\r\n    // Handle further actions like saving the booking details or sending an email confirmation.\r\n    // Redirect the user to another page (optional)\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"booking-page\">\r\n      <h1>Booking Details for {title}</h1>\r\n      <div className=\"tour-info\">\r\n        <img src={image} alt={title} />\r\n        <div className=\"tour-details\">\r\n          <h2>{title}</h2>\r\n          <p>{location}</p>\r\n          <p>Price: {price} / day</p>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleBooking} className=\"booking-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Full Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"numberOfPeople\">Number of People:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"numberOfPeople\"\r\n            name=\"numberOfPeople\"\r\n            value={formData.numberOfPeople}\r\n            onChange={handleInputChange}\r\n            min=\"1\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"specialRequests\">Special Requests:</label>\r\n          <textarea\r\n            id=\"specialRequests\"\r\n            name=\"specialRequests\"\r\n            value={formData.specialRequests}\r\n            onChange={handleInputChange}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">Confirm Booking</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './BookingPage.css';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// const BookingPage = () => {\r\n//   const [numTickets, setNumTickets] = useState(1);\r\n//   const [departureCity, setDepartureCity] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n//   const { state } = useLocation();\r\n\r\n//   if (!state) {\r\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\r\n//   }\r\n\r\n//   // Destructuring the details from the state\r\n//   const { trekDetails, tourDetails, type } = state;\r\n\r\n//   const handleBookingSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Validate the form inputs\r\n//     if (!departureCity.trim()) {\r\n//       setError('Departure city is required');\r\n//       return;\r\n//     }\r\n//     if (numTickets <= 0) {\r\n//       setError('Number of tickets must be greater than 0');\r\n//       return;\r\n//     }\r\n\r\n//     // Clear error if everything is valid\r\n//     setError('');\r\n\r\n//     // Setting booking details based on whether it's a trek or tour\r\n//     const bookingDetails = {\r\n//       type, // Type is either 'trek' or 'tour'\r\n//       departureCity,\r\n//       numTickets,\r\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n//     };\r\n\r\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n\r\n//     // Navigate to the payment page with appropriate details\r\n//     navigate('/payment', {\r\n//       state: {\r\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\r\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   // Choosing the correct details based on the type (trek or tour)\r\n//   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n//   return (\r\n//     <div className=\"booking-container\">\r\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n//       <div className=\"booking-card\">\r\n//         {/* Check if the image exists and render it */}\r\n//         {details.image && (\r\n//           <img\r\n//             src={details.image}\r\n//             alt={details.title}\r\n//             className=\"booking-image\"\r\n//           />\r\n//         )}\r\n//         <h2>{details.title}</h2>\r\n//         <p>{`Location: ${details.location || details.duration}`}</p>\r\n//         <p>{`Price: $${details.price} per person`}</p>\r\n\r\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n//           <label>\r\n//             Number of Tickets:\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"1\"\r\n//               value={numTickets}\r\n//               onChange={(e) => setNumTickets(Number(e.target.value))}\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <label>\r\n//             Departure City:\r\n//             <input\r\n//               type=\"text\"\r\n//               value={departureCity}\r\n//               onChange={(e) => setDepartureCity(e.target.value)}\r\n//               placeholder=\"Enter departure city\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           {/* Show error if there's any */}\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//           <button type=\"submit\" className=\"book-btn\">\r\n//             Confirm Booking\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingPage;\r\n\r\n// // import React, { useState } from 'react';\r\n// // import './BookingPage.css';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const BookingPage = () => {\r\n// //   const [numTickets, setNumTickets] = useState(1);\r\n// //   const [departureCity, setDepartureCity] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const navigate = useNavigate();\r\n// //   const { state } = useLocation();\r\n\r\n// //   if (!state) {\r\n// //     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\r\n// //   }\r\n\r\n// //   // Destructuring the details from the state\r\n// //   const { trekDetails, tourDetails, type } = state;\r\n\r\n// //   const handleBookingSubmit = (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     // Setting booking details based on whether it's a trek or tour\r\n// //     const bookingDetails = {\r\n// //       type, // Type is either 'trek' or 'tour'\r\n// //       departureCity,\r\n// //       numTickets,\r\n// //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n// //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n// //     };\r\n\r\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n\r\n// //     // Navigate to the payment page with appropriate details\r\n// //     navigate('/payment', {\r\n// //       state: {\r\n// //         title: type === 'trek' ? trekDetails.title : tourDetails.title,\r\n// //         price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n// //       },\r\n// //     });\r\n// //   };\r\n\r\n// //   // Choosing the correct details based on the type (trek or tour)\r\n// //   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n// //   return (\r\n// //     <div className=\"booking-container\">\r\n// //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n// //       <div className=\"booking-card\">\r\n// //         {details.image && (\r\n// //           <img\r\n// //             src={details.image}\r\n// //             alt={details.title}\r\n// //             className=\"booking-image\"\r\n// //           />\r\n// //         )}\r\n// //         <h2>{details.title}</h2>\r\n// //         <p>{`Location: ${details.location || details.duration}`}</p>\r\n// //         <p>{`Price: $${details.price} per person`}</p>\r\n\r\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// //           <label>\r\n// //             Number of Tickets:\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               min=\"1\"\r\n// //               value={numTickets}\r\n// //               onChange={(e) => setNumTickets(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           <label>\r\n// //             Departure City:\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={departureCity}\r\n// //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// //               placeholder=\"Enter departure city\"\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           {error && <p className=\"error-message\">{error}</p>}\r\n// //           <button type=\"submit\" className=\"book-btn\">\r\n// //             Confirm Booking\r\n// //           </button>\r\n// //         </form>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BookingPage;\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import './BookingPage.css';\r\n// // // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // // const BookingPage = () => {\r\n// // //   const [numTickets, setNumTickets] = useState(1);\r\n// // //   const [departureCity, setDepartureCity] = useState('');\r\n// // //   const [error, setError] = useState('');\r\n// // //   const navigate = useNavigate();\r\n// // //   const { state: tourDetails } = useLocation();\r\n\r\n// // //   if (!tourDetails) {\r\n// // //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\r\n// // //   }\r\n\r\n// // //   const handleBookingSubmit = (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const bookingDetails = {\r\n// // //       tourId: tourDetails.TourId || null,\r\n// // //       departureCity,\r\n// // //       numTickets,\r\n// // //     };\r\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n  \r\n// // //     // Pass the required tour details in the state\r\n// // //     navigate('/payment', {\r\n// // //       state: {\r\n// // //         title: tourDetails.title,\r\n// // //         price: tourDetails.price,\r\n// // //       },\r\n// // //     });\r\n// // //   };\r\n  \r\n\r\n// // //   return (\r\n// // //     <div className=\"booking-container\">\r\n// // //       <h1 className=\"booking-title\">Book Your Tour</h1>\r\n// // //       <div className=\"booking-card\">\r\n// // //         {tourDetails.image && (\r\n// // //           <img\r\n// // //             src={tourDetails.image}\r\n// // //             alt={tourDetails.title}\r\n// // //             className=\"booking-image\"\r\n// // //           />\r\n// // //         )}\r\n// // //         <h2>{tourDetails.title}</h2>\r\n// // //         <p>{`Location: ${tourDetails.location}`}</p>\r\n// // //         <p>{`Price: $${tourDetails.price} per person`}</p>\r\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// // //           <label>\r\n// // //             Number of Tickets:\r\n// // //             <input\r\n// // //               type=\"number\"\r\n// // //               min=\"1\"\r\n// // //               value={numTickets}\r\n// // //               onChange={(e) => setNumTickets(e.target.value)}\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           <label>\r\n// // //             Departure City:\r\n// // //             <input\r\n// // //               type=\"text\"\r\n// // //               value={departureCity}\r\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// // //               placeholder=\"Enter departure city\"\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           {error && <p className=\"error-message\">{error}</p>}\r\n// // //           <button type=\"submit\" className=\"book-btn\">\r\n// // //             Confirm Booking\r\n// // //           </button>\r\n// // //         </form>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default BookingPage;\r\n\r\n\r\n\r\n// // // // import React, { useState } from 'react';\r\n// // // // import { useNavigate, useLocation } from 'react-router-dom';\r\n// // // // import './BookingPage.css';\r\n\r\n// // // // const BookingPage = () => {\r\n// // // //   const { state } = useLocation();\r\n// // // //   const [numTickets, setNumTickets] = useState(1);\r\n// // // //   const [departureCity, setDepartureCity] = useState('');\r\n// // // //   const navigate = useNavigate();\r\n\r\n// // // //   if (!state) {\r\n// // // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\r\n// // // //   }\r\n\r\n// // // //   const { trekDetails, tourDetails, type } = state;\r\n\r\n// // // //   const handleBookingSubmit = (e) => {\r\n// // // //     e.preventDefault();\r\n// // // //     const bookingDetails = {\r\n// // // //       type, // Include type (trek or tour)\r\n// // // //       departureCity,\r\n// // // //       numTickets,\r\n// // // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n// // // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n// // // //     };\r\n// // // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n// // // //     navigate('/payment');\r\n// // // //   };\r\n\r\n// // // //   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"booking-container\">\r\n// // // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n// // // //       <div className=\"booking-card\">\r\n// // // //         <h2>{details.title}</h2>\r\n// // // //         <p>{`Duration: ${details.duration}`}</p>\r\n// // // //         <p>{`Price: PKR ${details.price} per person`}</p>\r\n// // // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// // // //           <label>\r\n// // // //             Number of Tickets:\r\n// // // //             <input\r\n// // // //               type=\"number\"\r\n// // // //               min=\"1\"\r\n// // // //               value={numTickets}\r\n// // // //               onChange={(e) => setNumTickets(e.target.value)}\r\n// // // //               required\r\n// // // //             />\r\n// // // //           </label>\r\n// // // //           <label>\r\n// // // //             Departure City:\r\n// // // //             <input\r\n// // // //               type=\"text\"\r\n// // // //               value={departureCity}\r\n// // // //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// // // //               placeholder=\"Enter departure city\"\r\n// // // //               required\r\n// // // //             />\r\n// // // //           </label>\r\n// // // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\r\n// // // //         </form>\r\n// // // //       </div>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default BookingPage;\r\n"],"mappings":"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;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAENnB,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACL,SAAS,EAAC,YAAY;QAAAb,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnGID,WAAW;EAAA,QACGJ,WAAW,EAGZC,WAAW;AAAA;AAAAyC,EAAA,GAJxBtC,WAAW;AAqGjB,eAAeA,WAAW;;AAI1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}