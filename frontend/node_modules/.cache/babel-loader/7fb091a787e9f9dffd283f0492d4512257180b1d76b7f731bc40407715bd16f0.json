{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\source\\\\repos\\\\VS Code\\\\react-project\\\\frontend\\\\src\\\\components\\\\signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  // State for form inputs\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [gender, setGender] = useState('');\n  const [phoneNum, setPhoneNum] = useState('');\n  const [dob, setDob] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isHovered, setIsHovered] = useState(false);\n  // Handle submission logic\n  const handleSubmit = () => {\n    // Validate inputs\n    if (!name || !username || !phoneNum || !dob || !email || !password || !confirmPassword) {\n      setError('All fields are required');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    const age = calculateAge(dob);\n    if (age < 18) {\n      setError('You must be at least 18 years old to register');\n      return;\n    }\n\n    // Clear errors and proceed\n    setError('');\n    console.log('Signup details:', {\n      name,\n      username,\n      gender,\n      phoneNum,\n      dob,\n      email,\n      password\n    });\n\n    // API logic here\n  };\n\n  // Helper function to calculate age based on date of birth\n  const calculateAge = dob => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.page,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupFullName\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupFullName\",\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupUsername\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupUsername\",\n            type: \"text\",\n            placeholder: \"Enter your Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"GenderDropDown\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"GenderDropDown\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            style: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select your Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"M\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"F\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupPhoneNum\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupPhoneNum\",\n            type: \"tel\",\n            placeholder: \"Enter your Phone Number\",\n            value: phoneNum,\n            onChange: e => setPhoneNum(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"DOB\",\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"DOB\",\n            type: \"date\",\n            value: dob,\n            onChange: e => setDob(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupEmail\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupEmail\",\n            type: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupPassword\",\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signupConfirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"signupConfirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm your password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: isHovered ? {\n            ...styles.button,\n            ...styles.buttonHover\n          } : styles.button // Apply hover styles\n          ,\n          onMouseEnter: () => setIsHovered(true) // Start hover effect\n          ,\n          onMouseLeave: () => setIsHovered(false) // End hover effect\n          ,\n          onClick: handleSubmit // Call form submission logic\n          ,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"LogIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline CSS styles\n_s(Signup, \"NVpr/1Km/htW3J2zEWBEJ1QqFiA=\");\n_c = Signup;\nconst styles = {\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundImage: 'url(\"/images/t6.jpg\")',\n    backgroundSize: 'cover',\n    // Adjust the size to fit the container\n    backgroundRepeat: 'no-repeat',\n    // Prevent repeating the image\n    backgroundPosition: 'center'\n  },\n  main: {\n    flex: 1,\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#000'\n  },\n  container: {\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    width: '60%',\n    maxWidth: '600px',\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    // Semi-transparent white\n    backdropFilter: 'blur(10px)',\n    // Apply a blur effect to the background\n    WebkitBackdropFilter: 'blur(10px)',\n    fontSize: 18\n  },\n  formGroup: {\n    marginBottom: '15px'\n  },\n  input: {\n    width: '90%',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px'\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#2e6f40',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    width: '94%',\n    fontSize: 18,\n    transition: 'background-color 0.5s ease, color 0.3s ease'\n  },\n  buttonHover: {\n    backgroundColor: '#06402b',\n    color: '#fff'\n  },\n  error: {\n    color: 'red',\n    marginTop: '10px'\n  },\n  footer: {\n    backgroundColor: '#007bff',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n  },\n  // Media queries for responsiveness\n  '@media (max-width: 768px)': {\n    header: {\n      fontSize: '18px'\n    },\n    container: {\n      padding: '15px'\n    }\n  },\n  '@media (max-width: 576px)': {\n    header: {\n      fontSize: '16px'\n    },\n    container: {\n      padding: '10px'\n    },\n    button: {\n      padding: '8px'\n    }\n  }\n};\nexport default Signup;\n\n// import React, { useState } from 'react';\n\n// const Signup = () => {\n//   // State for form inputs\n//   const [name, setName] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [phoneNum, setPhoneNum] = useState('');\n//   const [dob, setDob] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   // Handle form submission\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Validate inputs\n//     if (!name || !username || !phoneNum || !dob || !email || !password || !confirmPassword) {\n//       setError('All fields are required');\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       setError('Passwords do not match');\n//       return;\n//     }\n\n//     const age = calculateAge(dob);\n//     if (age < 18) {\n//       setError('You must be at least 18 years old to register');\n//       return;\n//     }\n\n//     // Clear errors and proceed with signup logic\n//     setError('');\n\n//     console.log('Signup form submitted:', {\n//       name, username, gender, phoneNum, dob, email, password\n//     });\n\n//     // Implement your API call logic here to send the form data to the backend.\n//   };\n\n//   // Helper function to calculate age based on date of birth\n//   const calculateAge = (dob) => {\n//     const birthDate = new Date(dob);\n//     const today = new Date();\n//     let age = today.getFullYear() - birthDate.getFullYear();\n//     const monthDiff = today.getMonth() - birthDate.getMonth();\n//     if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n//       age--;\n//     }\n//     return age;\n//   };\n\n//   return (\n//     <div style={styles.body}>\n//       <form onSubmit={handleSubmit}>\n//         <div style={styles.container}>\n//           <h2>Create New Account</h2>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"signupFullName\">Name</label>\n//             <input\n//               id=\"signupFullName\"\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"signupUsername\">Username</label>\n//             <input\n//               id=\"signupUsername\"\n//               type=\"text\"\n//               placeholder=\"Enter your Username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"GenderDropDown\">Gender</label>\n//             <select\n//               id=\"GenderDropDown\"\n//               value={gender}\n//               onChange={(e) => setGender(e.target.value)}\n//               required\n//               style={styles.input}\n//             >\n//               <option value=\"\" disabled>Select your Gender</option>\n//               <option value=\"M\">Male</option>\n//               <option value=\"F\">Female</option>\n//             </select>\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"PhoneNum\">Phone Number</label>\n//             <input\n//               id=\"signupPhoneNum\"\n//               type=\"tel\"\n//               placeholder=\"Enter your Phone Number\"\n//               value={phoneNum}\n//               onChange={(e) => setPhoneNum(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"DOB\">Date of Birth</label>\n//             <input\n//               id=\"DOB\"\n//               type=\"date\"\n//               value={dob}\n//               onChange={(e) => setDob(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"signupEmail\">Email</label>\n//             <input\n//               id=\"signupEmail\"\n//               type=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"signupPassword\">Password</label>\n//             <input\n//               id=\"signupPassword\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//               pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\n//               title=\"Password must be at least 8 characters long and contain uppercase, lowercase, and a number\"\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"signupConfirmPassword\">Confirm Password</label>\n//             <input\n//               id=\"signupConfirmPassword\"\n//               type=\"password\"\n//               placeholder=\"Confirm your password\"\n//               value={confirmPassword}\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//               required\n//               style={styles.input}\n//             />\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <button type=\"submit\" style={styles.button}>Signup</button>\n//           </div>\n\n//           {error && <p style={styles.error}>{error}</p>}\n\n//           <p>Already have an account? <a href=\"/login\">Login</a></p>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // Inline CSS styles\n// const styles = {\n//   body: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: '100vh',\n//     backgroundImage: 'url(\"/images/t6.jpg\")',\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     margin: 0,\n//     // Use flexbox to center the form vertically and horizontally\n//     flexDirection: 'column',\n//   },\n//   container: {\n//     backgroundColor: '#fff',\n//     padding: '40px',\n//     margin: '20px',\n//     borderRadius: '10px',\n//     boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//     maxWidth: '500px',\n//     textAlign: 'center',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     // Flexbox ensures the form takes available width up to max-width\n//     alignItems: 'center',\n//   },\n//   formGroup: {\n//     marginBottom: '15px',\n//     textAlign: 'left',\n//     width: '100%',\n//     // Ensure input fields span full width of their container\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px',\n//     border: '1px solid #ccc',\n//     borderRadius: '5px',\n//     boxSizing: 'border-box', // Ensures padding is included in width\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: '5px',\n//     cursor: 'pointer',\n//   },\n//   error: {\n//     color: 'red',\n//     marginTop: '5px',\n//   },\n//   // Media queries for responsiveness\n//   '@media (max-width: 768px)': {\n//     container: {\n//       padding: '20px',\n//     },\n//   },\n//   '@media (max-width: 576px)': {\n//     container: {\n//       margin: '10px',\n//       padding: '15px',\n//     },\n//     button: {\n//       padding: '8px',\n//     },\n//   },\n// };\n\n// export default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","name","setName","username","setUsername","gender","setGender","phoneNum","setPhoneNum","dob","setDob","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","isHovered","setIsHovered","handleSubmit","age","calculateAge","console","log","birthDate","Date","today","getFullYear","monthDiff","getMonth","getDate","style","styles","page","children","main","container","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","htmlFor","id","type","placeholder","value","onChange","e","target","input","disabled","button","buttonHover","onMouseEnter","onMouseLeave","onClick","href","_c","display","flexDirection","minHeight","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","flex","padding","alignItems","justifyContent","color","borderRadius","boxShadow","width","maxWidth","backgroundColor","backdropFilter","WebkitBackdropFilter","fontSize","marginBottom","border","cursor","transition","marginTop","footer","textAlign","header","$RefreshReg$"],"sources":["C:/Users/Hp/source/repos/VS Code/react-project/frontend/src/components/signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Signup = () => {\r\n  // State for form inputs\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  // Handle submission logic\r\n  const handleSubmit = () => {\r\n    // Validate inputs\r\n    if (!name || !username || !phoneNum || !dob || !email || !password || !confirmPassword) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    const age = calculateAge(dob);\r\n    if (age < 18) {\r\n      setError('You must be at least 18 years old to register');\r\n      return;\r\n    }\r\n\r\n    // Clear errors and proceed\r\n    setError('');\r\n\r\n    console.log('Signup details:', {\r\n      name, username, gender, phoneNum, dob, email, password\r\n    });\r\n\r\n    // API logic here\r\n  };\r\n\r\n  // Helper function to calculate age based on date of birth\r\n  const calculateAge = (dob) => {\r\n    const birthDate = new Date(dob);\r\n    const today = new Date();\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  return (\r\n    <div style={styles.page}>   \r\n\r\n      <main style={styles.main}>\r\n        <div style={styles.container}>\r\n          <h2>Create New Account</h2>\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupFullName\">Name</label>\r\n            <input\r\n              id=\"signupFullName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupUsername\">Username</label>\r\n            <input\r\n              id=\"signupUsername\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"GenderDropDown\">Gender</label>\r\n            <select\r\n              id=\"GenderDropDown\"\r\n              value={gender}\r\n              onChange={(e) => setGender(e.target.value)}\r\n              style={styles.input}\r\n            >\r\n              <option value=\"\" disabled>Select your Gender</option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupPhoneNum\">Phone Number</label>\r\n            <input\r\n              id=\"signupPhoneNum\"\r\n              type=\"tel\"\r\n              placeholder=\"Enter your Phone Number\"\r\n              value={phoneNum}\r\n              onChange={(e) => setPhoneNum(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"DOB\">Date of Birth</label>\r\n            <input\r\n              id=\"DOB\"\r\n              type=\"date\"\r\n              value={dob}\r\n              onChange={(e) => setDob(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupEmail\">Email</label>\r\n            \r\n            <input\r\n              id=\"signupEmail\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupPassword\">Password</label>\r\n            <input\r\n              id=\"signupPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <label htmlFor=\"signupConfirmPassword\">Confirm Password</label>\r\n            <input\r\n              id=\"signupConfirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm your password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            style={isHovered ? { ...styles.button, ...styles.buttonHover } : styles.button} // Apply hover styles\r\n            onMouseEnter={() => setIsHovered(true)} // Start hover effect\r\n            onMouseLeave={() => setIsHovered(false)} // End hover effect\r\n            onClick={handleSubmit} // Call form submission logic\r\n          >\r\n            Signup\r\n          </button>\r\n\r\n          {error && <p style={styles.error}>{error}</p>}\r\n\r\n          <p>Have an account? <a href=\"/login\">LogIn</a></p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS styles\r\nconst styles = {\r\n  page: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n    backgroundImage: 'url(\"/images/t6.jpg\")',\r\n    backgroundSize: 'cover', // Adjust the size to fit the container\r\n    backgroundRepeat: 'no-repeat', // Prevent repeating the image\r\n    backgroundPosition: 'center',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:'#000'\r\n  },\r\n  container: {\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n    width: '60%',\r\n    maxWidth: '600px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)', // Semi-transparent white\r\n    backdropFilter: 'blur(10px)', // Apply a blur effect to the background\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n    fontSize:18,\r\n  },\r\n  formGroup: {\r\n    marginBottom: '15px',\r\n  },\r\n  input: {\r\n    width: '90%',\r\n    padding: '10px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n  },\r\n  button: {\r\n    padding: '10px',\r\n    backgroundColor:'#2e6f40',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    width: '94%',\r\n    fontSize:18,\r\n    transition: 'background-color 0.5s ease, color 0.3s ease',\r\n  },\r\n  buttonHover:{\r\n    backgroundColor: '#06402b',\r\n    color:'#fff',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginTop: '10px',\r\n  },\r\n  footer: {\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n  },\r\n  // Media queries for responsiveness\r\n  '@media (max-width: 768px)': {\r\n    header: {\r\n      fontSize: '18px',\r\n    },\r\n    container: {\r\n      padding: '15px',\r\n    },\r\n  },\r\n  '@media (max-width: 576px)': {\r\n    header: {\r\n      fontSize: '16px',\r\n    },\r\n    container: {\r\n      padding: '10px',\r\n    },\r\n    button: {\r\n      padding: '8px',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const Signup = () => {\r\n//   // State for form inputs\r\n//   const [name, setName] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [gender, setGender] = useState('');\r\n//   const [phoneNum, setPhoneNum] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Validate inputs\r\n//     if (!name || !username || !phoneNum || !dob || !email || !password || !confirmPassword) {\r\n//       setError('All fields are required');\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setError('Passwords do not match');\r\n//       return;\r\n//     }\r\n\r\n//     const age = calculateAge(dob);\r\n//     if (age < 18) {\r\n//       setError('You must be at least 18 years old to register');\r\n//       return;\r\n//     }\r\n\r\n//     // Clear errors and proceed with signup logic\r\n//     setError('');\r\n\r\n//     console.log('Signup form submitted:', {\r\n//       name, username, gender, phoneNum, dob, email, password\r\n//     });\r\n\r\n//     // Implement your API call logic here to send the form data to the backend.\r\n//   };\r\n\r\n//   // Helper function to calculate age based on date of birth\r\n//   const calculateAge = (dob) => {\r\n//     const birthDate = new Date(dob);\r\n//     const today = new Date();\r\n//     let age = today.getFullYear() - birthDate.getFullYear();\r\n//     const monthDiff = today.getMonth() - birthDate.getMonth();\r\n//     if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n//       age--;\r\n//     }\r\n//     return age;\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.body}>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div style={styles.container}>\r\n//           <h2>Create New Account</h2>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"signupFullName\">Name</label>\r\n//             <input\r\n//               id=\"signupFullName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"signupUsername\">Username</label>\r\n//             <input\r\n//               id=\"signupUsername\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Username\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"GenderDropDown\">Gender</label>\r\n//             <select\r\n//               id=\"GenderDropDown\"\r\n//               value={gender}\r\n//               onChange={(e) => setGender(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             >\r\n//               <option value=\"\" disabled>Select your Gender</option>\r\n//               <option value=\"M\">Male</option>\r\n//               <option value=\"F\">Female</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"PhoneNum\">Phone Number</label>\r\n//             <input\r\n//               id=\"signupPhoneNum\"\r\n//               type=\"tel\"\r\n//               placeholder=\"Enter your Phone Number\"\r\n//               value={phoneNum}\r\n//               onChange={(e) => setPhoneNum(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"DOB\">Date of Birth</label>\r\n//             <input\r\n//               id=\"DOB\"\r\n//               type=\"date\"\r\n//               value={dob}\r\n//               onChange={(e) => setDob(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"signupEmail\">Email</label>\r\n//             <input\r\n//               id=\"signupEmail\"\r\n//               type=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"signupPassword\">Password</label>\r\n//             <input\r\n//               id=\"signupPassword\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//               pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n//               title=\"Password must be at least 8 characters long and contain uppercase, lowercase, and a number\"\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <label htmlFor=\"signupConfirmPassword\">Confirm Password</label>\r\n//             <input\r\n//               id=\"signupConfirmPassword\"\r\n//               type=\"password\"\r\n//               placeholder=\"Confirm your password\"\r\n//               value={confirmPassword}\r\n//               onChange={(e) => setConfirmPassword(e.target.value)}\r\n//               required\r\n//               style={styles.input}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <button type=\"submit\" style={styles.button}>Signup</button>\r\n//           </div>\r\n\r\n//           {error && <p style={styles.error}>{error}</p>}\r\n\r\n//           <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Inline CSS styles\r\n// const styles = {\r\n//   body: {\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     height: '100vh',\r\n//     backgroundImage: 'url(\"/images/t6.jpg\")',\r\n//     backgroundSize: 'cover',\r\n//     backgroundPosition: 'center',\r\n//     margin: 0,\r\n//     // Use flexbox to center the form vertically and horizontally\r\n//     flexDirection: 'column',\r\n//   },\r\n//   container: {\r\n//     backgroundColor: '#fff',\r\n//     padding: '40px',\r\n//     margin: '20px',\r\n//     borderRadius: '10px',\r\n//     boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n//     width: '100%',\r\n//     maxWidth: '500px',\r\n//     textAlign: 'center',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     // Flexbox ensures the form takes available width up to max-width\r\n//     alignItems: 'center',\r\n//   },\r\n//   formGroup: {\r\n//     marginBottom: '15px',\r\n//     textAlign: 'left',\r\n//     width: '100%',\r\n//     // Ensure input fields span full width of their container\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   },\r\n//   input: {\r\n//     width: '100%',\r\n//     padding: '10px',\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '5px',\r\n//     boxSizing: 'border-box', // Ensures padding is included in width\r\n//   },\r\n//   button: {\r\n//     width: '100%',\r\n//     padding: '10px',\r\n//     backgroundColor: '#007bff',\r\n//     color: '#fff',\r\n//     border: 'none',\r\n//     borderRadius: '5px',\r\n//     cursor: 'pointer',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginTop: '5px',\r\n//   },\r\n//   // Media queries for responsiveness\r\n//   '@media (max-width: 768px)': {\r\n//     container: {\r\n//       padding: '20px',\r\n//     },\r\n//   },\r\n//   '@media (max-width: 576px)': {\r\n//     container: {\r\n//       margin: '10px',\r\n//       padding: '15px',\r\n//     },\r\n//     button: {\r\n//       padding: '8px',\r\n//     },\r\n//   },\r\n// };\r\n\r\n// export default Signup;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}