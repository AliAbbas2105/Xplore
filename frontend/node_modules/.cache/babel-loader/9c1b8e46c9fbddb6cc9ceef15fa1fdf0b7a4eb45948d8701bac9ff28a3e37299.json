{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\source\\\\repos\\\\VS Code\\\\react-project\\\\frontend\\\\src\\\\components\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './BookingPage.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const [numTickets, setNumTickets] = useState(1);\n  const [departureCity, setDepartureCity] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  if (!state) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fallback-message\",\n      children: \"No booking details provided. Please go back and select a trek or tour.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Destructuring the details from the state\n  const {\n    trekDetails,\n    tourDetails,\n    type\n  } = state;\n  const handleBookingSubmit = e => {\n    e.preventDefault();\n\n    // Validate the form inputs\n    if (!departureCity.trim()) {\n      setError('Departure city is required');\n      return;\n    }\n    if (numTickets <= 0) {\n      setError('Number of tickets must be greater than 0');\n      return;\n    }\n\n    // Clear error if everything is valid\n    setError('');\n\n    // Setting booking details based on whether it's a trek or tour\n    const bookingDetails = {\n      type,\n      // Type is either 'trek' or 'tour'\n      departureCity,\n      numTickets,\n      price: type === 'trek' ? trekDetails.price : tourDetails.price,\n      totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets\n    };\n    sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n    // Navigate to the payment page with appropriate details\n    navigate('/payment', {\n      state: {\n        title: type === 'trek' ? trekDetails.title : tourDetails.title,\n        price: type === 'trek' ? trekDetails.price : tourDetails.price\n      }\n    });\n  };\n\n  // Choosing the correct details based on the type (trek or tour)\n  const details = type === 'trek' ? trekDetails : tourDetails;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"booking-title\",\n      children: [\"Book Your \", type === 'trek' ? 'Trek' : 'Tour']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-card\",\n      children: [details.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: details.image,\n        alt: details.title,\n        className: \"booking-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: details.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Location: ${details.location || details.duration}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Price: $${details.price} per person`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookingSubmit,\n        className: \"booking-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number of Tickets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: numTickets,\n            onChange: e => setNumTickets(Number(e.target.value)),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Departure City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: departureCity,\n            onChange: e => setDepartureCity(e.target.value),\n            placeholder: \"Enter departure city\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"book-btn\",\n          children: \"Confirm Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"X3vVvjRWxfcP0IKCdyWwWSTOnQk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = BookingPage;\nexport default BookingPage;\n\n// import React, { useState } from 'react';\n// import './BookingPage.css';\n// import { useNavigate, useLocation } from 'react-router-dom';\n\n// const BookingPage = () => {\n//   const [numTickets, setNumTickets] = useState(1);\n//   const [departureCity, setDepartureCity] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n//   const { state } = useLocation();\n\n//   if (!state) {\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\n//   }\n\n//   // Destructuring the details from the state\n//   const { trekDetails, tourDetails, type } = state;\n\n//   const handleBookingSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Setting booking details based on whether it's a trek or tour\n//     const bookingDetails = {\n//       type, // Type is either 'trek' or 'tour'\n//       departureCity,\n//       numTickets,\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n//     };\n\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n//     // Navigate to the payment page with appropriate details\n//     navigate('/payment', {\n//       state: {\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\n//       },\n//     });\n//   };\n\n//   // Choosing the correct details based on the type (trek or tour)\n//   const details = type === 'trek' ? trekDetails : tourDetails;\n\n//   return (\n//     <div className=\"booking-container\">\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n//       <div className=\"booking-card\">\n//         {details.image && (\n//           <img\n//             src={details.image}\n//             alt={details.title}\n//             className=\"booking-image\"\n//           />\n//         )}\n//         <h2>{details.title}</h2>\n//         <p>{`Location: ${details.location || details.duration}`}</p>\n//         <p>{`Price: $${details.price} per person`}</p>\n\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n//           <label>\n//             Number of Tickets:\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               value={numTickets}\n//               onChange={(e) => setNumTickets(e.target.value)}\n//               required\n//             />\n//           </label>\n//           <label>\n//             Departure City:\n//             <input\n//               type=\"text\"\n//               value={departureCity}\n//               onChange={(e) => setDepartureCity(e.target.value)}\n//               placeholder=\"Enter departure city\"\n//               required\n//             />\n//           </label>\n//           {error && <p className=\"error-message\">{error}</p>}\n//           <button type=\"submit\" className=\"book-btn\">\n//             Confirm Booking\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingPage;\n\n// // import React, { useState } from 'react';\n// // import './BookingPage.css';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const BookingPage = () => {\n// //   const [numTickets, setNumTickets] = useState(1);\n// //   const [departureCity, setDepartureCity] = useState('');\n// //   const [error, setError] = useState('');\n// //   const navigate = useNavigate();\n// //   const { state: tourDetails } = useLocation();\n\n// //   if (!tourDetails) {\n// //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\n// //   }\n\n// //   const handleBookingSubmit = (e) => {\n// //     e.preventDefault();\n// //     const bookingDetails = {\n// //       tourId: tourDetails.TourId || null,\n// //       departureCity,\n// //       numTickets,\n// //     };\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n\n// //     // Pass the required tour details in the state\n// //     navigate('/payment', {\n// //       state: {\n// //         title: tourDetails.title,\n// //         price: tourDetails.price,\n// //       },\n// //     });\n// //   };\n\n// //   return (\n// //     <div className=\"booking-container\">\n// //       <h1 className=\"booking-title\">Book Your Tour</h1>\n// //       <div className=\"booking-card\">\n// //         {tourDetails.image && (\n// //           <img\n// //             src={tourDetails.image}\n// //             alt={tourDetails.title}\n// //             className=\"booking-image\"\n// //           />\n// //         )}\n// //         <h2>{tourDetails.title}</h2>\n// //         <p>{`Location: ${tourDetails.location}`}</p>\n// //         <p>{`Price: $${tourDetails.price} per person`}</p>\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// //           <label>\n// //             Number of Tickets:\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               value={numTickets}\n// //               onChange={(e) => setNumTickets(e.target.value)}\n// //               required\n// //             />\n// //           </label>\n// //           <label>\n// //             Departure City:\n// //             <input\n// //               type=\"text\"\n// //               value={departureCity}\n// //               onChange={(e) => setDepartureCity(e.target.value)}\n// //               placeholder=\"Enter departure city\"\n// //               required\n// //             />\n// //           </label>\n// //           {error && <p className=\"error-message\">{error}</p>}\n// //           <button type=\"submit\" className=\"book-btn\">\n// //             Confirm Booking\n// //           </button>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default BookingPage;\n\n// // // import React, { useState } from 'react';\n// // // import { useNavigate, useLocation } from 'react-router-dom';\n// // // import './BookingPage.css';\n\n// // // const BookingPage = () => {\n// // //   const { state } = useLocation();\n// // //   const [numTickets, setNumTickets] = useState(1);\n// // //   const [departureCity, setDepartureCity] = useState('');\n// // //   const navigate = useNavigate();\n\n// // //   if (!state) {\n// // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\n// // //   }\n\n// // //   const { trekDetails, tourDetails, type } = state;\n\n// // //   const handleBookingSubmit = (e) => {\n// // //     e.preventDefault();\n// // //     const bookingDetails = {\n// // //       type, // Include type (trek or tour)\n// // //       departureCity,\n// // //       numTickets,\n// // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\n// // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\n// // //     };\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\n// // //     navigate('/payment');\n// // //   };\n\n// // //   const details = type === 'trek' ? trekDetails : tourDetails;\n\n// // //   return (\n// // //     <div className=\"booking-container\">\n// // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\n// // //       <div className=\"booking-card\">\n// // //         <h2>{details.title}</h2>\n// // //         <p>{`Duration: ${details.duration}`}</p>\n// // //         <p>{`Price: PKR ${details.price} per person`}</p>\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n// // //           <label>\n// // //             Number of Tickets:\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               value={numTickets}\n// // //               onChange={(e) => setNumTickets(e.target.value)}\n// // //               required\n// // //             />\n// // //           </label>\n// // //           <label>\n// // //             Departure City:\n// // //             <input\n// // //               type=\"text\"\n// // //               value={departureCity}\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\n// // //               placeholder=\"Enter departure city\"\n// // //               required\n// // //             />\n// // //           </label>\n// // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","BookingPage","_s","numTickets","setNumTickets","departureCity","setDepartureCity","error","setError","navigate","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","trekDetails","tourDetails","type","handleBookingSubmit","e","preventDefault","trim","bookingDetails","price","totalPrice","sessionStorage","setItem","JSON","stringify","title","details","image","src","alt","location","duration","onSubmit","min","value","onChange","Number","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Hp/source/repos/VS Code/react-project/frontend/src/components/BookingPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './BookingPage.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst BookingPage = () => {\r\n  const [numTickets, setNumTickets] = useState(1);\r\n  const [departureCity, setDepartureCity] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n\r\n  if (!state) {\r\n    return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\r\n  }\r\n\r\n  // Destructuring the details from the state\r\n  const { trekDetails, tourDetails, type } = state;\r\n\r\n  const handleBookingSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate the form inputs\r\n    if (!departureCity.trim()) {\r\n      setError('Departure city is required');\r\n      return;\r\n    }\r\n    if (numTickets <= 0) {\r\n      setError('Number of tickets must be greater than 0');\r\n      return;\r\n    }\r\n\r\n    // Clear error if everything is valid\r\n    setError('');\r\n\r\n    // Setting booking details based on whether it's a trek or tour\r\n    const bookingDetails = {\r\n      type, // Type is either 'trek' or 'tour'\r\n      departureCity,\r\n      numTickets,\r\n      price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n      totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n    };\r\n\r\n    sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n\r\n    // Navigate to the payment page with appropriate details\r\n    navigate('/payment', {\r\n      state: {\r\n        title: type === 'trek' ? trekDetails.title : tourDetails.title,\r\n        price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Choosing the correct details based on the type (trek or tour)\r\n  const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n  return (\r\n    <div className=\"booking-container\">\r\n      <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n      <div className=\"booking-card\">\r\n        {/* Check if the image exists and render it */}\r\n        {details.image && (\r\n          <img\r\n            src={details.image}\r\n            alt={details.title}\r\n            className=\"booking-image\"\r\n          />\r\n        )}\r\n        <h2>{details.title}</h2>\r\n        <p>{`Location: ${details.location || details.duration}`}</p>\r\n        <p>{`Price: $${details.price} per person`}</p>\r\n\r\n        <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n          <label>\r\n            Number of Tickets:\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={numTickets}\r\n              onChange={(e) => setNumTickets(Number(e.target.value))}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Departure City:\r\n            <input\r\n              type=\"text\"\r\n              value={departureCity}\r\n              onChange={(e) => setDepartureCity(e.target.value)}\r\n              placeholder=\"Enter departure city\"\r\n              required\r\n            />\r\n          </label>\r\n          {/* Show error if there's any */}\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <button type=\"submit\" className=\"book-btn\">\r\n            Confirm Booking\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n\r\n// import React, { useState } from 'react';\r\n// import './BookingPage.css';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// const BookingPage = () => {\r\n//   const [numTickets, setNumTickets] = useState(1);\r\n//   const [departureCity, setDepartureCity] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n//   const { state } = useLocation();\r\n\r\n//   if (!state) {\r\n//     return <h2 className=\"fallback-message\">No booking details provided. Please go back and select a trek or tour.</h2>;\r\n//   }\r\n\r\n//   // Destructuring the details from the state\r\n//   const { trekDetails, tourDetails, type } = state;\r\n\r\n//   const handleBookingSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Setting booking details based on whether it's a trek or tour\r\n//     const bookingDetails = {\r\n//       type, // Type is either 'trek' or 'tour'\r\n//       departureCity,\r\n//       numTickets,\r\n//       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n//     };\r\n\r\n//     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n\r\n//     // Navigate to the payment page with appropriate details\r\n//     navigate('/payment', {\r\n//       state: {\r\n//         title: type === 'trek' ? trekDetails.title : tourDetails.title,\r\n//         price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   // Choosing the correct details based on the type (trek or tour)\r\n//   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n//   return (\r\n//     <div className=\"booking-container\">\r\n//       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n//       <div className=\"booking-card\">\r\n//         {details.image && (\r\n//           <img\r\n//             src={details.image}\r\n//             alt={details.title}\r\n//             className=\"booking-image\"\r\n//           />\r\n//         )}\r\n//         <h2>{details.title}</h2>\r\n//         <p>{`Location: ${details.location || details.duration}`}</p>\r\n//         <p>{`Price: $${details.price} per person`}</p>\r\n\r\n//         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n//           <label>\r\n//             Number of Tickets:\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"1\"\r\n//               value={numTickets}\r\n//               onChange={(e) => setNumTickets(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <label>\r\n//             Departure City:\r\n//             <input\r\n//               type=\"text\"\r\n//               value={departureCity}\r\n//               onChange={(e) => setDepartureCity(e.target.value)}\r\n//               placeholder=\"Enter departure city\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//           <button type=\"submit\" className=\"book-btn\">\r\n//             Confirm Booking\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingPage;\r\n\r\n// // import React, { useState } from 'react';\r\n// // import './BookingPage.css';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const BookingPage = () => {\r\n// //   const [numTickets, setNumTickets] = useState(1);\r\n// //   const [departureCity, setDepartureCity] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const navigate = useNavigate();\r\n// //   const { state: tourDetails } = useLocation();\r\n\r\n// //   if (!tourDetails) {\r\n// //     return <h2 className=\"fallback-message\">No tour details provided. Please go back and select a tour.</h2>;\r\n// //   }\r\n\r\n// //   const handleBookingSubmit = (e) => {\r\n// //     e.preventDefault();\r\n// //     const bookingDetails = {\r\n// //       tourId: tourDetails.TourId || null,\r\n// //       departureCity,\r\n// //       numTickets,\r\n// //     };\r\n// //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n  \r\n// //     // Pass the required tour details in the state\r\n// //     navigate('/payment', {\r\n// //       state: {\r\n// //         title: tourDetails.title,\r\n// //         price: tourDetails.price,\r\n// //       },\r\n// //     });\r\n// //   };\r\n  \r\n\r\n// //   return (\r\n// //     <div className=\"booking-container\">\r\n// //       <h1 className=\"booking-title\">Book Your Tour</h1>\r\n// //       <div className=\"booking-card\">\r\n// //         {tourDetails.image && (\r\n// //           <img\r\n// //             src={tourDetails.image}\r\n// //             alt={tourDetails.title}\r\n// //             className=\"booking-image\"\r\n// //           />\r\n// //         )}\r\n// //         <h2>{tourDetails.title}</h2>\r\n// //         <p>{`Location: ${tourDetails.location}`}</p>\r\n// //         <p>{`Price: $${tourDetails.price} per person`}</p>\r\n// //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// //           <label>\r\n// //             Number of Tickets:\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               min=\"1\"\r\n// //               value={numTickets}\r\n// //               onChange={(e) => setNumTickets(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           <label>\r\n// //             Departure City:\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               value={departureCity}\r\n// //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// //               placeholder=\"Enter departure city\"\r\n// //               required\r\n// //             />\r\n// //           </label>\r\n// //           {error && <p className=\"error-message\">{error}</p>}\r\n// //           <button type=\"submit\" className=\"book-btn\">\r\n// //             Confirm Booking\r\n// //           </button>\r\n// //         </form>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BookingPage;\r\n\r\n\r\n\r\n// // // import React, { useState } from 'react';\r\n// // // import { useNavigate, useLocation } from 'react-router-dom';\r\n// // // import './BookingPage.css';\r\n\r\n// // // const BookingPage = () => {\r\n// // //   const { state } = useLocation();\r\n// // //   const [numTickets, setNumTickets] = useState(1);\r\n// // //   const [departureCity, setDepartureCity] = useState('');\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   if (!state) {\r\n// // //     return <h2>No booking details provided. Please go back and select a trek or tour.</h2>;\r\n// // //   }\r\n\r\n// // //   const { trekDetails, tourDetails, type } = state;\r\n\r\n// // //   const handleBookingSubmit = (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const bookingDetails = {\r\n// // //       type, // Include type (trek or tour)\r\n// // //       departureCity,\r\n// // //       numTickets,\r\n// // //       price: type === 'trek' ? trekDetails.price : tourDetails.price,\r\n// // //       totalPrice: (type === 'trek' ? trekDetails.price : tourDetails.price) * numTickets,\r\n// // //     };\r\n// // //     sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));\r\n// // //     navigate('/payment');\r\n// // //   };\r\n\r\n// // //   const details = type === 'trek' ? trekDetails : tourDetails;\r\n\r\n// // //   return (\r\n// // //     <div className=\"booking-container\">\r\n// // //       <h1 className=\"booking-title\">Book Your {type === 'trek' ? 'Trek' : 'Tour'}</h1>\r\n// // //       <div className=\"booking-card\">\r\n// // //         <h2>{details.title}</h2>\r\n// // //         <p>{`Duration: ${details.duration}`}</p>\r\n// // //         <p>{`Price: PKR ${details.price} per person`}</p>\r\n// // //         <form onSubmit={handleBookingSubmit} className=\"booking-form\">\r\n// // //           <label>\r\n// // //             Number of Tickets:\r\n// // //             <input\r\n// // //               type=\"number\"\r\n// // //               min=\"1\"\r\n// // //               value={numTickets}\r\n// // //               onChange={(e) => setNumTickets(e.target.value)}\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           <label>\r\n// // //             Departure City:\r\n// // //             <input\r\n// // //               type=\"text\"\r\n// // //               value={departureCity}\r\n// // //               onChange={(e) => setDepartureCity(e.target.value)}\r\n// // //               placeholder=\"Enter departure city\"\r\n// // //               required\r\n// // //             />\r\n// // //           </label>\r\n// // //           <button type=\"submit\" className=\"book-btn\">Confirm Booking</button>\r\n// // //         </form>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default BookingPage;\r\n"],"mappings":"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A,QAIEJ,WAAW,EACVC,WAAW;AAAA;AAAAgD,EAAA,GALzB7C,WAAW;AAqGjB,eAAeA,WAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}